///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AtlasAutomation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FilloutWorkspacePopup recording.
    /// </summary>
    [TestModule("a197f43b-fb20-4534-b03b-84e096df5644", ModuleType.Recording, 1)]
    public partial class Create_Workspace : ITestModule
    {
        /// <summary>
        /// Holds an instance of the AtlasAutomationRepository repository.
        /// </summary>
        public static AtlasAutomationRepository repo = AtlasAutomationRepository.Instance;

        static Create_Workspace instance = new Create_Workspace();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Create_Workspace()
        {
            Workspace_Name = "Demo_Cycle1";
            Planning_Period = "3/26/2023 to 10/28/2023";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Create_Workspace Instance
        {
            get { return instance; }
        }

#region Variables

        string _Planning_Period;

        /// <summary>
        /// Gets or sets the value of variable Planning_Period.
        /// </summary>
        [TestVariable("6cb791b2-d155-42af-bea5-9f987813aff5")]
        public string Planning_Period
        {
            get { return _Planning_Period; }
            set { _Planning_Period = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Workspace_Name.
        /// </summary>
        [TestVariable("42df0ad1-cfe1-4cc9-8958-33a76f0d7df3")]
        public string Workspace_Name
        {
            get { return repo.Workspace_Name; }
            set { repo.Workspace_Name = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewWorkspace.NameTextBox' at 268;14.", repo.NewWorkspace.NameTextBoxInfo, new RecordItemIndex(0));
            repo.NewWorkspace.NameTextBox.Click("268;14");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Workspace_Name' with focus on 'NewWorkspace.NameTextBox'.", repo.NewWorkspace.NameTextBoxInfo, new RecordItemIndex(1));
            repo.NewWorkspace.NameTextBox.PressKeys(Workspace_Name);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewWorkspace.PlanningPeriod' at 68;3.", repo.NewWorkspace.PlanningPeriodInfo, new RecordItemIndex(2));
            repo.NewWorkspace.PlanningPeriod.Click("68;3");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Planning_Period' with focus on 'NewWorkspace.PlanningPeriod'.", repo.NewWorkspace.PlanningPeriodInfo, new RecordItemIndex(3));
            repo.NewWorkspace.PlanningPeriod.PressKeys(Planning_Period);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NewWorkspace.Create' at 5;8.", repo.NewWorkspace.CreateInfo, new RecordItemIndex(4));
            repo.NewWorkspace.Create.Click("5;8");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
